# Function for setting the column names of the graph data so the
# data processing doesn't have to be run through again.
# Assumed format is Sparklink labels format.
setGraphLabels <- function(graph.labels, graph.data) {
names(graph.data) <- graph.labels[,1] # Is this even used? It's just one line and it's already run in the file processing itself
}
# Returns a data frame to be graphed from the given amplog file.
ampGraphData <- function(raw.amplog.file) {
amp.graph.data <- raw.amplog.file %>% select(X1, X3)
return(amp.graph.data)
}
# Get start time
# Get end time
# Create interval that ranges -3 min, +3 min (this improves visibility of data and catches timestamps that don't exactly match)
## i.e: start time = 1:05 PM, end time = 1:15 PM
## interval: 1:02 PM - 1:18 PM
# Get all times and amperage contained within that interval
## Either use [start:end] indexing or use %in% to check inside the interval
intervalAmperageData <- function(amp.graph.data, start.time, end.time) {
selected.interval <- as.interval(start.time - (3 * 60), end.time + (3 * 60))
selected.amp.times <- amp.graph.data[,1][amp.graph.data$X1 %within% selected.interval]
selected.amp.data <- amp.graph.data %>% filter(X1 %in% selected.amp.times)
return(selected.amp.data)
}
# Deletes every nth column in the given data frame, beginning from the
# given starting index, i.
nthDelete <- function(data.frame, n, i) {
data.frame[,-(seq(i, to=ncol(data.frame), by=n))]
}
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
install.packages("readxl")
install.packages("tidyverse")
library(readxl) # dependency for reading in .xlsx files
test <- readxl_example("clippy.xls")
library(readxl)
test <- readxl_example("clippy.xls")
library(readxl)
devtools::install_github("tidyverse/readxl")
library(xlsx)
library(readxl)
test <- read_excel("170622_Study114Amplog.xlsx")
library(dplyr)
library(readxl)
library(plotly)
library(ggplot2)
library(ggvis)
readxltest <- read_excel("wipotrends.xlsx")
readxltest <- read_excel("wipotrends.xlsx")
read_wipo <- read_excel("/wipotrends.xlsx")
read_wipo <- read_excel("//wipotrends.xlsx")
read_wipo <- read_excel('wipotrends.xlsx')
read_wipo <- read_excel('wipotrends.xlsx')
read_wipo <- read_excel('wipotrends.xlsx')
read_wipo <- read_excel('wipotrends.xlsx')
read_wipo <- read_excel('wipotrends.xlsx')
install.packages("readxl")
install.packages("readxl")
shiny::runApp('Jobs/Spring 2017/DMEN Assistant/dmen-vis')
dput(current.graph.data)
current.graph.data <- graph.data[[42]]
current.graph.data <- graph.data[[18]]
graph.data <- scanGraphData(read.csv("data\\170622_Study114_AIM.csv", stringsAsFactors = FALSE, na.strings = c("", NA)))
setwd("~/Jobs/Spring 2017/DMEN Assistant/dmen-vis")
graph.data <- scanGraphData(read.csv("data\\170622_Study114_AIM.csv", stringsAsFactors = FALSE, na.strings = c("", NA)))
current.graph.data <- graph.data[[42]]
dput(current.graph.data)
test <- dput(current.graph.data)
head(current.graph.data)
current.graph.data[9:10,]
current.graph.data[400:500,]
View(current.graph.data)
current.graph.data[2000:3000,]
current.graph.data[1500:3000,]
test <- current.graph.data[1500:3000,]
test <- current.graph.data[1500:3000,]
scan.plot.data <- test
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series, size = marked)) +
geom_line(aes(colour = red)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot.data <- melt(similar.plot.data, id.vars = "sample.diameters", variable.name = "series")
scan.plot.data <- melt(test, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series, size = marked)) +
geom_line(aes(colour = red)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(aes(colour = red)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
test <- applyLoessSmooth(test)
test <- applyLoessSmooth(test, 0.05)
test <- applyLoessSmooth(current.graph.data, 0.05)
test2 <- test[1500:3000,]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
test2 <- test[1000:3000,]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
test2 <- test[1000:2500,]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
dput(test)
test <- current.graph.data[1000:2500,]
test <- current.graph.data[1000:2500,]
dput(test)
loess.test <- applyLoessSmooth(current.graph.data, 0.05)
test2 <- loess.test[1000:2500,]
dput(test)
test <- current.graph.data[1000:2000,]
dput(test)
loess.test <- applyLoessSmooth(current.graph.data, 0.05)
test2 <- loess.test[1000:2000,]
dput(test2)
loess.test <- applyLoessSmooth(current.graph.data, 0.05)
test2 <- loess.test[1000:2000,]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
test <- current.graph.data[1000:3000,]
loess.test <- applyLoessSmooth(current.graph.data, 0.05)
test2 <- loess.test[1000:3000,]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
applyLoessSmooth <- function(raw.data, smoothing.span) {
curr.scan.state <- raw.data[complete.cases(raw.data),]
## response
vars <- colnames(curr.scan.state)
## covariate
id <- 1:nrow(curr.scan.state)
## define a loess filter function (fitting loess regression line)
loess.filter <- function (x, span) loess(formula = paste(x, "id", sep = "~"),
data = curr.scan.state,
degree = 1,
span = span, na.action=na.omit)$fitted
## apply filter column-by-column
loess.graph.data <- as.data.frame(lapply(vars, loess.filter, span = smoothing.span),
col.names = colnames(curr.scan.state))
#  sample.rows <- length(loess.graph.data[,1])
loess.graph.data <- loess.graph.data %>% mutate("sample.diameters" = curr.scan.state$sample.diameters)
#[1:sample.rows])
}
loess.test <- applyLoessSmooth(current.graph.data, 0.05)
applyLoessSmooth <- function(raw.data, smoothing.span) {
curr.scan.state <- raw.data[complete.cases(raw.data),]
## response
vars <- colnames(curr.scan.state)
## covariate
id <- 1:nrow(curr.scan.state)
## define a loess filter function (fitting loess regression line)
loess.filter <- function (x, span) loess(formula = paste(x, "id", sep = "~"),
data = curr.scan.state,
degree = 1,
span = span, na.action=na.omit)$fitted
## apply filter column-by-column
loess.graph.data <- as.data.frame(lapply(vars, loess.filter, span = smoothing.span),
col.names = colnames(curr.scan.state))
sample.rows <- length(loess.graph.data[,1])
loess.graph.data <- loess.graph.data %>% mutate("sample.diameters" = curr.scan.state$sample.diameters[1:sample.rows])
}
loess.test <- applyLoessSmooth(current.graph.data, 0.05)
test2 <- loess.test[1000:2500,]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
test2 <- loess.test[1000:3000,]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
dput(test)
test2 <- loess.test[1000:2500,]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
test <- current.graph.data[1000:3000,]
test <- current.graph.data[1000:3000, 1]
test2 <- loess.test[1000:3000, 1]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
test2 <- loess.test[1000:3000, 1]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
View(scan.plot.data)
test <- current.graph.data[1000:3000, 1]
current.graph.data[1]
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line() +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(test$sample.diameters, value)) +
geom_line() +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
test2 <- loess.test[1000:3000,]
scan.plot.data <- melt(test2, id.vars = "sample.diameters", variable.name = "series")
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
dput(test)
test <- current.graph.data[1000:3000,]
dput(test)
View(test)
test <- current.graph.data[2210:2250,]
test2 <- loess.test[2210:2250,]
dput(test)
dput(test2)
test <- current.graph.data[1000:3000,]
test2 <- loess.test[1000:3000,]
dput(test)
dput(test2)
dput(test2)
dput(test)
dput(test2)
text <- dput(test2)
View(text)
test2 <- loess.test[2000:3000,]
dput(test2)
test2 <- loess.test[2900:3000,]
dput(test2)
test2 <- loess.test[1000:1100,]
dput(test2)
test2 <- loess.test[1000:3000,]
dput(test2)
fileConn <- file("output.txt")
writeLines(dput(test2), fileConn)
text <- dput(test2)
writeLines(c(dput(test2)), fileConn)
writeLines(text, fileConn)
sink("myfile.txt", append=FALSE, split=FALSE)
dput(test2)
sink()
dput(test2)
test <- current.graph.data[1000:3000, 1]
dput(test)
dput(test2)
loess.test <- applyLoessSmooth(current.graph.data, 0.05)
View(test2)
loess.test <- applyLoessSmooth(current.graph.data, 0.05)
test2 <- loess.test[1000:3000, 1]
loess.test <- applyLoessSmooth(current.graph.data, 0.05)
View(loess.test)
test <- current.graph.data[1000:3000, c(1,5)]
test2 <- loess.test[1000:3000, c(1,5)]
scan.plot.data <- test2
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, scan1)) +
geom_line() +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
dput(test)
dput(test2)
sink("myfile.txt", append=FALSE, split=FALSE)
dput(test2)
runApp()
selected.scan.data <- graph.data[[8]]
dissimilar.scans <- findDissimilarScan(selected.scan.data)
similar.plot.data <- selected.scan.data[, !names(selected.scan.data) %in% dissimilar.scans]
dissimilar.plot.data <- selected.scan.data[dissimilar.scans]
dissimilar.plot.data <- selected.scan.data[dissimilar.scans]
selected.scan.data <- graph.data[[8]]
dissimilar.scans <- findDissimilarScan(selected.scan.data)
similar.plot.data <- selected.scan.data[, !names(selected.scan.data) %in% dissimilar.scans]
dissimilar.plot.data <- selected.scan.data[dissimilar.scans]
scan.plot.data <- melt(similar.plot.data, id.vars = "sample.diameters", variable.name = 'series')
selected.scan.data <- graph.data[[42]]
dissimilar.scans <- findDissimilarScan(selected.scan.data)
similar.plot.data <- selected.scan.data[, !names(selected.scan.data) %in% dissimilar.scans]
dissimilar.plot.data <- selected.scan.data[dissimilar.scans]
scan.plot.data <- melt(similar.plot.data, id.vars = "sample.diameters", variable.name = 'series')
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series, size = marked)) +
geom_line(aes(colour = red)) +
scale_size_manual(values = c(0.1, 1.5)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(aes(colour = red)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(aes(colour = "red")) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(aes(colour = series2)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot.data.2 <- melt(dissimilar.plot.data, id.vars = "sample.diameters", variable.name = 'series2')
scan.plot.data.2 <- melt(dissimilar.plot.data, id.vars = "sample.diameters", variable.name = 'series2')
scan.plot.data.2 <- melt(dissimilar.plot.data,  variable.name = 'series2')
dissimilar.plot.data <- selected.scan.data$sample.diameters
scan.plot.data.2 <- melt(dissimilar.plot.data, id.vars = "sample.diameters", variable.name = 'series2')
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(data = scan.plot.data.2, colour = series2) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot.data.2 <- melt(dissimilar.plot.data, id.vars = "sample.diameters", variable.name = 'series2')
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(data = scan.plot.data.2, colour = series2) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(data = scan.plot.data.2, aes(colour = series2)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(data = scan.plot.data.2, aes(colour = series)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot.data.2 <- melt(dissimilar.plot.data, id.vars = "sample.diameters", variable.name = 'series2')
View(scan.plot.data.2)
dissimilar.plot.data <- dissimilar.plot.data %>% mutate("sample.diameters" = selected.scan.data$sample.diameters)
dissimilar.plot.data <- selected.scan.data[c(dissimilar.scans, 5)]
dissimilar.plot.data <- selected.scan.data[c(dissimilar.scans, 5)]
dissimilar.plot.data <- cbind(dissimilar.plot.data, selected.scan.data$sample.diameters)
dissimilar.plot.data <- selected.scan.data[dissimilar.scans]
dissimilar.plot.data <- cbind(dissimilar.plot.data, selected.scan.data$sample.diameters)
View(loess.graph.data)
dissimilar.plot.data <- cbind(dissimilar.plot.data, "sample.diameters" = selected.scan.data$sample.diameters)
dissimilar.plot.data <- selected.scan.data[dissimilar.scans]
dissimilar.plot.data <- cbind(dissimilar.plot.data, "sample.diameters" = selected.scan.data$sample.diameters)
scan.plot.data <- melt(similar.plot.data, id.vars = "sample.diameters", variable.name = 'series')
scan.plot.data.2 <- melt(dissimilar.plot.data, id.vars = "sample.diameters", variable.name = 'series2')
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(data = scan.plot.data.2, aes(colour = series)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(data = scan.plot.data.2) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(data = scan.plot.data.2, colour = series2) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot <- ggplot(data = scan.plot.data, aes(sample.diameters, value)) +
geom_line(aes(colour = series)) +
geom_line(data = scan.plot.data.2, aes(colour = series2)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(NULL, aes(sample.diameters, value)) +
geom_line(data = scan.plot.data, aes(colour = series)) +
geom_line(data = scan.plot.data.2, aes(colour = series2)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
selected.scan.data <- applyLoessSmooth(graph.data[[42]])
selected.scan.data <- applyLoessSmooth(graph.data[[42]], 0.05)
dissimilar.scans <- findDissimilarScan(selected.scan.data)
similar.plot.data <- selected.scan.data[, !names(selected.scan.data) %in% dissimilar.scans]
dissimilar.plot.data <- selected.scan.data[dissimilar.scans]
dissimilar.plot.data <- cbind(dissimilar.plot.data, "sample.diameters" = selected.scan.data$sample.diameters)
scan.plot.data <- melt(similar.plot.data, id.vars = "sample.diameters", variable.name = 'series')
scan.plot.data.2 <- melt(dissimilar.plot.data, id.vars = "sample.diameters", variable.name = 'series2')
scan.plot <- ggplot(NULL, aes(sample.diameters, value)) +
geom_line(data = scan.plot.data, aes(colour = series)) +
geom_line(data = scan.plot.data.2, aes(colour = series2)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(NULL, aes(sample.diameters, value)) +
geom_line(data = scan.plot.data, aes(colour = series)) +
geom_line(data = scan.plot.data.2, aes(colour = "red")) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
scan.plot <- ggplot(NULL, aes(sample.diameters, value)) +
geom_line(data = scan.plot.data, aes(colour = series)) +
geom_line(data = scan.plot.data.2, aes(colour = series2)) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
e
scan.plot <- ggplot(NULL, aes(sample.diameters, value)) +
geom_line(data = scan.plot.data, aes(colour = "green")) +
geom_line(data = scan.plot.data.2, aes(colour = "red")) +
xlab("Diameters (nm)") +
ylab("Concentration (dN#/cm^2)") +
theme(plot.title = element_text(hjust = 0.5)) # Centers graph title
scan.plot
