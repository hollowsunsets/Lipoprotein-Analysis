ncol(avg.scans) - 1
1
1:ncol(avg.scans) - 1
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:ncol(avg.scans) - 1) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
View(avg.sample.data)
avg.sample.data <- graph.data[[1]]$sample.diameters
for (i in 1:ncol(avg.scans) - 5) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
}
graph.index <- 1
for (i in 1:ncol(avg.scans) - 5) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
for (i in 1:ncol(avg.scans) - 5) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
print(1:ncol(avg.scans) - 5)
}
graph.index <- 1
for (i in 1:ncol(avg.scans) - 5) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
print(1:ncol(avg.scans) - 5)
}
avg.sample.data <- graph.data[[1]]$sample.diameters
for (i in 1:(ncol(avg.scans) - 5)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
print(1:(ncol(avg.scans) - 5))
}
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 5)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
print(1:(ncol(avg.scans) - 5))
}
avg.scans <-  rbind(c(" ", names(graph.data)))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans)))))
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
avg.sample.data <- avg.sample.data[complete.cases(avg.sample.data),]
avg.scans <- avg.scans %>%
rbind(avg.sample.data)
colnames(avg.sample.data) <- colnames(avg.scans)
avg.scans <- avg.scans %>%
rbind(avg.sample.data)
names(avg.sample.data) <- names(avg.scans)
avg.scans <- avg.scans %>%
rbind(avg.sample.data)
View(avg.sample.data)
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
avg.sample.data <- avg.sample.data[complete.cases(avg.sample.data),]
View(avg.scans)
View(avg.sample.data)
names(avg.sample.data) <- names(avg.scans)
names(avg.sample.data) <- names(avg.scans)
names(avg.sample.data) <- names(avg.scans)
avg.scans <- avg.scans %>%
rbind(avg.sample.data)
avg.scans <- avg.scans %>%
rbind(avg.sample.data)
names(avg.sample.data) <- names(avg.scans)
colnames(avg.sample.data) <- colnames(avg.scans)
rbind(avg.scans, avg.sample.data)
data.frame(rbind(as.matrix(avg.scans), avg.sample.data))
data.frame(rbind(as.matrix(avg.scans), as.matrix(avg.sample.data)))
test3<-data.frame(rbind(as.matrix(avg.scans), as.matrix(avg.sample.data)))
View(test3)
avg.scans <- data.frame(rbind(as.matrix(avg.scans), as.matrix(avg.sample.data)))
curr.sample$sample.diameters[[1]]
colnames(avg.scans) <- avg.scans[,1]
colnames(avg.scans) <- avg.scans[1,]
View(avg.scans)
avg.scans
colnames(avg.scans)
avg.scans <-  rbind(c(" ", names(graph.data)))
# Remove any columns that contain NA values that may have resulted from given files having irregular sizes (i.e, 46 labels for 47 scans)
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
# If a Sparklink file was provided, add sample names.
if (!is.null(sparklink.file)) {
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
}
# Add a row containing the "Diameter" and matching "inj" labels for each sample
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans)))))
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
avg.sample.data <- avg.sample.data[complete.cases(avg.sample.data),]
avg.scans <- data.frame(rbind(as.matrix(avg.scans), as.matrix(avg.sample.data)))
avg.scans[1,]
View(avg.scans)
avg.scans <-  rbind(c(" ", names(graph.data)))
# Remove any columns that contain NA values that may have resulted from given files having irregular sizes (i.e, 46 labels for 47 scans)
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
# If a Sparklink file was provided, add sample names.
if (!is.null(sparklink.file)) {
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
}
# Add a row containing the "Diameter" and matching "inj" labels for each sample
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans)))))
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
avg.sample.data <- avg.sample.data[complete.cases(avg.sample.data),]
final.avg.scans <- data.frame(rbind(as.matrix(avg.scans), as.matrix(avg.sample.data)))
View(final.avg.scans)
colnames(final.avg.scans) <- colnames(avg.scans)
View(final.avg.scans)
final.avg.scans <- data.frame(rbind(as.matrix(avg.scans), as.matrix(avg.sample.data)))
View(final.avg.scans)
avg.scans <- data.frame(rbind(as.matrix(avg.scans), as.matrix(avg.sample.data)))
getAverageScans <- function(graph.data, sparklink.file = NULL) {
# Add the overall sample labels to the graph, which should have been generated already for the graph data
avg.scans <-  rbind(c(" ", names(graph.data)))
# Remove any columns that contain NA values that may have resulted from given files having irregular sizes (i.e, 46 labels for 47 scans)
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
# If a Sparklink file was provided, add sample names.
if (!is.null(sparklink.file)) {
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
}
# Add a row containing the "Diameter" and matching "inj" labels for each sample
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans)))))
if (!is.null(graph.data)) {
# Retrieves the diameters from the first set of sample data. The diameters should be the same for every dataset.
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
avg.sample.data <- avg.sample.data[complete.cases(avg.sample.data),]
avg.scans <- data.frame(rbind(as.matrix(avg.scans), as.matrix(avg.sample.data)))
}
return(avg.scans)
}
test4 <- getAverageScans(graph.data, sparklink.file)
View(test4)
write.csv(test4, file = "MyData.csv", row.names = FALSE)
test5 <- write.csv(test4, file = "MyData.csv", row.names = FALSE)
test4 <- getAverageScans(graph.data, sparklink.file)
test5 <- write.csv(test4, file = "MyData.csv", row.names = FALSE)
test5 <- write.csv(test4, file = "MyData.csv", row.names = FALSE, col.names = FALSE)
test4[1,]
test4[2,]
colnames(test4) <- test4[1,]
colnames(test4)
colnames(test4) <- as.character(test4[1,])
colnames(test4)
View(test4)
avg.scans <-  rbind(c(" ", names(graph.data)))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans)))))
View(avg.scans)
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
avg.sample.data <- avg.sample.data[complete.cases(avg.sample.data),]
avg.scans <- rbind(avg.scans, setNames(avg.sample.data, names(avg.scans)))
avg.scans <- rbind(avg.scans, setNames(rev(avg.scans)), names(avg.scans))
avg.scans <- rbind(avg.scans, setNames(rev(avg.scans), names(avg.scans)))
View(avg.scans)
test <- mapply(avg.scans, avg.sample.data)
test <- mapply(c, avg.scans, avg.sample.data)
View(test)
View(avg.sample.data)
ncol(avg.sample.data)
ncol(avg.scans)
install.packages("data.table")
library(data.table)
test<-rbindlist(list(avg.scans, avg.sample.data))
avg.scans <- rbind(avg.scans, c(1:46))
View(avg.sample.data)
View(avg.scans)
avg.scans <- rbind(avg.scans, avg.sample.data[1,])
avg.scans <- rbind(avg.scans, avg.sample.data[,1])
View(avg.sample.data)
View(avg.scans)
avg.scans <- cbind(avg.scans, avg.sample.data[1,])
View(avg.scans)
avg.scans <- rbind(avg.scans, avg.sample.data[,1])
avg.scans <- rbind(avg.scans, avg.sample.data[1,])
avg.scans <-  rbind(c(" ", names(graph.data)))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans)))))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans)) - 1)))
View(avg.scans)
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans) - 1))))
View(avg.scans)
avg.scans <-  rbind(c(" ", names(graph.data)))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans) - 1))))
avg.sample.data <- graph.data[[1]]$sample.diameters
avg.sample.data <- rbind(graph.data[[1]]$sample.diameters)
View(avg.sample.data)
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
rbind(current.sample.means)
View(avg.sample.data)
data.frame(means = rowMeans(current.sample)) %>%
bind_rows(avg.sample.data)
rowMeans(current.sample) %>%
bind_rows(avg.sample.data)
avg.sample.data <- as.data.frame(rbind(graph.data[[1]]$sample.diameters))
rowMeans(current.sample) %>%
bind_rows(avg.sample.data)
avg.scans <-  rbind(c(" ", names(graph.data)))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans) - 1))))
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
bind_rows(avg.scans, avg.sample.data)
is.data.frame(avg.scans)
avg.scans <-  as.data.frame(rbind(c(" ", names(graph.data))))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans) - 1))))
View(avg.scans)
avg.scans <-  rbind(c(" ", names(graph.data)))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans) - 1))))
avg.scans <- as.data.frame(avg.scans)
View(avg.scans)
avg.scans <-  rbind(c(" ", names(graph.data)))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans) - 1))))
avg.scans <- as.data.frame(avg.scans, stringsAsFactors = FALSE)
View(avg.scans)
bind_rows(avg.scans, avg.sample.data)
test <- bind_rows(avg.scans, avg.sample.data)
View(test)
is.data.frame(avg.scans)
is.data.frame(avg.sample.data)
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(formatC(current.sample.means))
graph.index <- graph.index + 1
}
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(formatC(current.sample.means))
graph.index <- graph.index + 1
}
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(formatC(current.sample.means))
graph.index <- graph.index + 1
}
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(formatC(current.sample.means))
graph.index <- graph.index + 1
}
View(avg.sample.data)
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- data.frame(means = rowMeans(current.sample))
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
current.sample.means <- rowMeans(current.sample)
bind_rows(avg.scans, avg.sample.data)
test <- bind_rows(avg.scans, avg.sample.data)
View(test)
View(test)
View(test)
test <- bind_rows(avg.scans, as.character(avg.sample.data))
View(test)
test <- union(avg.scans, as.character(avg.sample.data))
View(test)
test <- bind_rows(avg.scans, as.character(avg.sample.data))
avg.scans <-  rbind(c(" ", names(graph.data)))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans) - 1))))
avg.scans <- as.data.frame(avg.scans, stringsAsFactors = FALSE)
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(current.sample.means)
graph.index <- graph.index + 1
}
test <- bind_rows(avg.scans, as.character(avg.sample.data))
test <- bind_rows(avg.scans, avg.sample.data)
is.data.frame(avg.scans)
is.data.frame(avg.sample.data)
View(avg.sample.data)
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(as.character(current.sample.means))
graph.index <- graph.index + 1
}
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(as.character(current.sample.means))
graph.index <- graph.index + 1
}
View(avg.sample.data)
View(avg.sample.data)
avg.sample.data <- graph.data[[1]]$sample.diameters
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(as.character(current.sample.means))
graph.index <- graph.index + 1
}
View(avg.sample.data)
avg.sample.data <- as.character(graph.data[[1]]$sample.diameters)
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(as.character(current.sample.means))
graph.index <- graph.index + 1
}
View(avg.sample.data)
bind_rows(avg.scans, avg.sample.data)
avg.sample.data <- as.data.frame(avg.sample.data)
View(avg.sample.data)
avg.sample.data <- as.character(graph.data[[1]]$sample.diameters)
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(as.character(current.sample.means))
graph.index <- graph.index + 1
}
avg.sample.data <- as.data.frame(avg.sample.data, stringsAsFactors = FALSE)
View(avg.sample.data)
bind_rows(avg.scans, avg.sample.data)
test <- bind_rows(avg.scans, avg.sample.data)
View(test)
avg.scans <- bind_rows(avg.scans, avg.sample.data)
View(avg.scans)
avg.scans <- as.data.frame(avg.scans, stringsAsFactors = FALSE)
avg.scans <-  rbind(c(" ", names(graph.data)))
# Remove any columns that contain NA values that may have resulted from given files having irregular sizes (i.e, 46 labels for 47 scans)
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
# If a Sparklink file was provided, add sample names.
if (!is.null(sparklink.file)) {
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
}
# Add a row containing the "Diameter" and matching "inj" labels for each sample
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans) - 1))))
avg.scans <- as.data.frame(avg.scans, stringsAsFactors = FALSE)
if (!is.null(graph.data)) {
# Retrieves the diameters from the first set of sample data. The diameters should be the same for every dataset.
avg.sample.data <- as.character(graph.data[[1]]$sample.diameters)
graph.index <- 1
# For loop bound is set to the size of avg.scans so unlabeled samples are not included
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(as.character(current.sample.means))
graph.index <- graph.index + 1
}
avg.sample.data <- as.data.frame(avg.sample.data, stringsAsFactors = FALSE)
avg.scans <- bind_rows(avg.scans, avg.sample.data)
avg.scans <-  rbind(c(" ", names(graph.data)))
avg.scans <- avg.scans[ , colSums(is.na(avg.scans)) == 0]
avg.scans <- avg.scans %>%
rbind(c("Sample Name", sparklink.file[ ,4]))
avg.scans <- avg.scans %>%
rbind(c("Diameter", paste0("inj", 1:(ncol(avg.scans) - 1))))
avg.sample.data <- as.character(graph.data[[1]]$sample.diameters)
graph.index <- 1
for (i in 1:(ncol(avg.scans) - 1)) {
current.sample <- graph.data[[graph.index]][,1:4]
current.sample.means <- rowMeans(current.sample)
avg.sample.data <- avg.sample.data %>%
cbind(as.character(current.sample.means))
graph.index <- graph.index + 1
}
avg.sample.data <- as.data.frame(avg.sample.data, stringsAsFactors = FALSE)
avg.scans <- bind_rows(avg.scans, avg.sample.data)
View(avg.scans)
View(avg.scans)
View(avg.scans)
